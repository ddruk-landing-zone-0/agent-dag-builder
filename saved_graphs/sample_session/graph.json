{
    "graph_id": "3965d4dd71e140c1ee5dc7a45ae15e91614a964a0ee92ce3c5913ccf0a31c22b",
    "nodes": {
        "inputs": {
            "nodeName": "inputs",
            "systemInstructions": "Input node",
            "userPrompt": "Input node",
            "pythonCode": {},
            "outputSchema": {
                "input1": "1",
                "input2": "2",
                "input3": "100"
            },
            "kwargs": {
                "input1": "1",
                "input2": "2",
                "input3": "100"
            },
            "id": "16aedcac66f2cf753157c8f986457f55ba9add3a6496e797f1c60ed32d7a0720",
            "_compiled": true,
            "_parents": [],
            "_children": [
                "node1",
                "node2",
                "node3"
            ],
            "_inputs": {},
            "_outputs": {
                "input1": "1",
                "input2": "2",
                "input3": "100"
            },
            "status": "completed"
        },
        "node3": {
            "nodeName": "node3",
            "systemInstructions": "This is a test system instruction for Node3.",
            "userPrompt": "Calculate the sum of @[node1.output1] and @[node2.output1] and @[inputs.input1]",
            "pythonCode": {
                "argument": {
                    "arg1": "@[node1.output1]",
                    "arg2": "@[node2.output1]",
                    "arg3": "@[inputs.input1]"
                },
                "function_body": "def function(arg1, arg2, arg3):\n    return {'output1': int(arg1) + int(arg2) + int(arg3)}"
            },
            "outputSchema": {
                "output1": "This is the output1 of Node3 , sum of node1.output1, node2.output1 and input1"
            },
            "kwargs": {},
            "id": "71840c4f47d738a1f675eb38806f06c641004e7ce6c65e3fb170972b10e2b4fa",
            "_compiled": true,
            "_parents": [
                [
                    "node1",
                    "output1"
                ],
                [
                    "node2",
                    "output1"
                ],
                [
                    "inputs",
                    "input1"
                ]
            ],
            "_children": [],
            "_inputs": {
                "@[node1.output1]": "101",
                "@[node2.output1]": "300",
                "@[inputs.input1]": "1"
            },
            "_outputs": {
                "output1": "402"
            },
            "status": "completed"
        },
        "node1": {
            "nodeName": "node1",
            "systemInstructions": "This is a test system instruction for Node1.",
            "userPrompt": "Calculate the sum of @[inputs.input1] and @[inputs.input2] and @[inputs.input1]^2",
            "pythonCode": {
                "argument": {
                    "arg1": "@[inputs.input1]",
                    "arg2": "@[inputs.input3]"
                },
                "function_body": "import time\ndef function(arg1, arg2):\n    time.sleep(10)\n    return {'output1': int(arg1) + int(arg2), 'output2': int(arg1)**3}"
            },
            "outputSchema": {
                "output1": "This is the output1 of Node1 , sum of input1 and input2",
                "output2": "This is the output2 of Node1 , square of input1"
            },
            "kwargs": {},
            "id": "bebb58b224c453ef838f68eb8e786d40e0d4787eb73d636f2746b36d9e8be806",
            "_compiled": true,
            "_parents": [
                [
                    "inputs",
                    "input1"
                ],
                [
                    "inputs",
                    "input2"
                ],
                [
                    "inputs",
                    "input3"
                ]
            ],
            "_children": [
                "node3"
            ],
            "_inputs": {
                "@[inputs.input1]": "1",
                "@[inputs.input2]": "2",
                "@[inputs.input3]": "100"
            },
            "_outputs": {
                "output1": "101",
                "output2": "1"
            },
            "status": "completed"
        },
        "node2": {
            "nodeName": "node2",
            "systemInstructions": "This is a test system instruction for Node2.",
            "userPrompt": "Calculate the product of @[inputs.input1] and @[inputs.input2] and @[inputs.input3]",
            "pythonCode": {
                "argument": {
                    "arg1": "@[inputs.input1]",
                    "arg2": "@[inputs.input2]",
                    "arg3": "@[inputs.input3]"
                },
                "function_body": "import time; \ndef function(arg1, arg2, arg3):\n    time.sleep(10)\n    return {'output1': int(arg1) * int(arg2) * int(arg3) + int(arg3)}"
            },
            "outputSchema": {
                "output1": "This is the output1 of Node2 , product of input1, input2 and input3"
            },
            "kwargs": {},
            "id": "d9e508ce19575231f92beb906187f84edab50b21789272cf28aa36c31bdf05b9",
            "_compiled": true,
            "_parents": [
                [
                    "inputs",
                    "input1"
                ],
                [
                    "inputs",
                    "input2"
                ],
                [
                    "inputs",
                    "input3"
                ]
            ],
            "_children": [
                "node3"
            ],
            "_inputs": {
                "@[inputs.input1]": "1",
                "@[inputs.input2]": "2",
                "@[inputs.input3]": "100"
            },
            "_outputs": {
                "output1": "300"
            },
            "status": "completed"
        }
    },
    "venv_path": "./runner_envs/venv",
    "python_packages": [],
    "create_env": true
}