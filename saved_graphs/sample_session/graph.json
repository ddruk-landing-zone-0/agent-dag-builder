{
    "graph_id": "f2ca4644b79f818f15da911f382a8cbfaa38415c0ec5f09ad0c00f9374c26069",
    "nodes": {
        "inputs": {
            "nodeName": "inputs",
            "systemInstructions": "N/A",
            "userPrompt": "N/A",
            "pythonCode": {},
            "outputSchema": {
                "cont1": "asia",
                "cont2": "europe"
            },
            "useLLM": false,
            "jsonMode": false,
            "toolName": "N/A",
            "toolDescription": "N/A",
            "kwargs": {
                "cont1": "asia",
                "cont2": "europe"
            },
            "id": "039f7e6ba5c8182ed6e3f8961428d62f8935676914bccff57f1dc9b14c93ed53",
            "_compiled": true,
            "_parents": [],
            "_children": [
                "CountryCapital2",
                "CountryCapital1"
            ],
            "_inputs": {},
            "_outputs": {
                "cont1": "asia",
                "cont2": "europe"
            },
            "status": "completed"
        },
        "Capitilizer": {
            "nodeName": "Capitilizer",
            "systemInstructions": "This node is to upper case a given string",
            "userPrompt": "N/A",
            "pythonCode": {
                "argument": {
                    "arg1": "@[PlaceRelationship.relationship]"
                },
                "function_body": "def function(arg1):\n    return {\"caps\":arg1.upper()}"
            },
            "outputSchema": {
                "caps": "Upper case result"
            },
            "useLLM": false,
            "jsonMode": false,
            "toolName": "",
            "toolDescription": "",
            "kwargs": {
                "model_name": "gemini-2.0-flash-001",
                "temperature": 0.5,
                "max_output_tokens": 1000,
                "max_retries": 5,
                "wait_time": 30,
                "deployed_gcp": false
            },
            "id": "b745b30e1bfdcabac883f236856d91634bdeeb97eed0ea2586db28b2a2316b02",
            "_compiled": true,
            "_parents": [
                [
                    "PlaceRelationship",
                    "relationship"
                ]
            ],
            "_children": [],
            "_inputs": {},
            "_outputs": {},
            "status": "pending"
        },
        "CountryCapital1": {
            "nodeName": "CountryCapital1",
            "systemInstructions": "You are an AI assistant. You must use `CountryCapital` tool to extract country name and its capital city.",
            "userPrompt": "Tell me a country name and its capital city in @[inputs.cont1]. You must use `CountryCapital` tool to extract country name and its capital city. You must answer in JSON format using the tool `CountryCapitalTool`.",
            "pythonCode": {
                "argument": {},
                "function_body": ""
            },
            "outputSchema": {
                "capital": "Capital's name",
                "country": "Country's name"
            },
            "useLLM": true,
            "jsonMode": true,
            "toolName": "CountryCapitalTool",
            "toolDescription": "CountryCapitalTool is used to generate a country name and its capital city.",
            "kwargs": {
                "model_name": "gemini-2.0-flash-001",
                "temperature": 0.5,
                "max_output_tokens": 1000,
                "max_retries": 5,
                "wait_time": 30,
                "deployed_gcp": false
            },
            "id": "7db3e6f28ff9f44b41228fac05438ffa82e8b661bded4c864cc7d0f636c7e79f",
            "_compiled": true,
            "_parents": [
                [
                    "inputs",
                    "cont1"
                ]
            ],
            "_children": [
                "PlaceRelationship",
                "DemographyCalc1"
            ],
            "_inputs": {
                "@[inputs.cont1]": "asia"
            },
            "_outputs": {
                "country": "Japan",
                "capital": "Tokyo"
            },
            "status": "completed"
        },
        "DemographyCalc1": {
            "nodeName": "DemographyCalc1",
            "systemInstructions": "You are an AI assistant. Your task is to assist the user to estimate the demography of a country. You must use `DemographyCalc` tool to estimate the demographic details of a country.",
            "userPrompt": "The country is @[CountryCapital1.country] . Tell me the GDP, population, area and density of the country. You must use `DemographyCalc` tool to answer in JSON format.",
            "pythonCode": {
                "argument": {},
                "function_body": ""
            },
            "outputSchema": {
                "area": "Area of the country",
                "density": "Population density of the country",
                "gdp": "GDP of the country",
                "population": "Population of the country"
            },
            "useLLM": true,
            "jsonMode": true,
            "toolName": "DemographyCalc",
            "toolDescription": "This tool is designed to estimate the demographic details of a country in JSON format",
            "kwargs": {
                "model_name": "gemini-2.0-flash-001",
                "temperature": 0.5,
                "max_output_tokens": 1000,
                "max_retries": 5,
                "wait_time": 30,
                "deployed_gcp": false
            },
            "id": "de4662c0f46649dfa1f1e30cc7faeae4a1b6e1c850ba930cee6651a8bb7480a2",
            "_compiled": true,
            "_parents": [
                [
                    "CountryCapital1",
                    "country"
                ]
            ],
            "_children": [],
            "_inputs": {
                "@[CountryCapital1.country]": "Japan"
            },
            "_outputs": {
                "error": "Error executing node DemographyCalc1: 'functionCall'. Location: GraphNode.execute"
            },
            "status": "error"
        },
        "PlaceRelationship": {
            "nodeName": "PlaceRelationship",
            "systemInstructions": "You are an AI assistant. Your task is to assist the user in their tasks.",
            "userPrompt": "Tell me the relationship between @[CountryCapital1.country] and @[CountryCapital2.country]. Mainly focus on the cities mentioned. How their social relationships are ?",
            "pythonCode": {
                "argument": {},
                "function_body": ""
            },
            "outputSchema": {
                "relationship": "Relationship between two countries"
            },
            "useLLM": true,
            "jsonMode": false,
            "toolName": "",
            "toolDescription": "",
            "kwargs": {
                "model_name": "gemini-2.0-flash-001",
                "temperature": 0.5,
                "max_output_tokens": 1000,
                "max_retries": 5,
                "wait_time": 30,
                "deployed_gcp": false
            },
            "id": "87d2c5b26b752c7b820336b0c27143c3437826f5cf262a6e87a4c90ce701d4cd",
            "_compiled": true,
            "_parents": [
                [
                    "CountryCapital1",
                    "country"
                ],
                [
                    "CountryCapital2",
                    "country"
                ]
            ],
            "_children": [
                "Capitilizer"
            ],
            "_inputs": {},
            "_outputs": {},
            "status": "pending"
        },
        "CountryCapital2": {
            "nodeName": "CountryCapital2",
            "systemInstructions": "You are an AI assistant. You must use `CountryCapitalTool` tool to extract country name and its capital city.",
            "userPrompt": "Tell me a country name and its capital city in @[inputs.cont2]. You must use `CountryCapital` tool to extract country name and its capital city. You must answer in JSON format using the tool `CountryCapitalTool`.",
            "pythonCode": {
                "argument": {},
                "function_body": ""
            },
            "outputSchema": {
                "capital": "Capital City Name",
                "country": "Country Name"
            },
            "useLLM": true,
            "jsonMode": true,
            "toolName": "CountryCapitalTool",
            "toolDescription": "CountryCapitalTool is used to generate a country name and its capital city in JSON format.",
            "kwargs": {
                "model_name": "gemini-2.0-flash-001",
                "temperature": 0.5,
                "max_output_tokens": 1000,
                "max_retries": 5,
                "wait_time": 30,
                "deployed_gcp": false
            },
            "id": "3090815b34697aa4eb53a9e48a6674c1215e8dc2592e3da0003030583917e679",
            "_compiled": true,
            "_parents": [
                [
                    "inputs",
                    "cont2"
                ]
            ],
            "_children": [
                "PlaceRelationship"
            ],
            "_inputs": {
                "@[inputs.cont2]": "europe"
            },
            "_outputs": {
                "error": "Error executing node CountryCapital2: 'functionCall'. Location: GraphNode.execute"
            },
            "status": "error"
        }
    },
    "venv_path": "./runner_envs/venv",
    "python_packages": [],
    "create_env": true
}